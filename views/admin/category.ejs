<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
    }

    .pagination {
      display: inline-block;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }

    .pagination a:hover {
      background-color: #f5f5f5;
    }

    .error-message {
      color: red;
    }
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
     
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" />
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" ></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label for="type" class="form-label">Type</label>
                <select name="type" class="form-control" id="type" >
                    <option value="" disabled selected>Select Category Type</option>
                    <option value="strength">Strength</option>
                    <option value="cardio">Cardio</option>
                    <!-- Add more types as needed -->
                </select>
                <div id="type-error" class="error-message"></div>
            </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
           
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <%cat.reverse().forEach((category,index)=>{%>
                  <tr>
                    <td></td>
                    <td class="text-start"><%=category.name%></td>
                    <td class="text-start"><%=category.description%></td>
                    <td>
                      <%if(category.categoryOffer){%>
                        <%=category.categoryOffer%>%
                        <%}else{%>
                          0%
                          <%}%>
                    </td>
                    <td class="text-start">
                      <%if(category.categoryOffer===0){%>
                      <button class="btn btn-info" style="width: 100px">
                        <a href="#" class="text-white" onclick="addOffer('<%=category._id%>')">Add Offer</a>
                      </button>
                      <%}else{%>
                      <button class="btn btn-info"style="width: 100px">
                        <a href="#" class="text-white" onclick="removeOffer('<%=category._id%>')">Remove</a>
                      </button>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <% if (category.isListed) { %>
                        <span 
                          class="badge rounded-pill" 
                          style="width: 60px; background-color: #28a745; color: white; font-size: 12px; text-align: center; padding: 5px;">
                          Listed
                        </span>
                      <% } else { %>
                        <span 
                          class="badge rounded-pill" 
                          style="width: 60px; background-color: #dc3545; color: white; font-size: 12px; text-align: center; padding: 5px;">
                          Unlisted
                        </span>
                      <% } %>
                      
                    </td>
                    <td class="text-start">
                      <%if(category.isListed){%>
                      <button class="btn btn-danger" style="width: 70px">
                        <a href="/admin/listCategory?id=<%=category._id%>" class="text-white">Unlist</a>
                      </button>
                      <%}else{%>
                      <button class="btn btn-success" style="width: 70px">
                        <a href="/admin/unlistCategory?id=<%=category._id%>" class="text-white">List</a>
                      </button>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editCategory?id=<%= category._id%>" class="btn btn-info text-white">Edit</a>
                    </td>
                  </tr>
                  <%})%>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %> <% for (let i = 1; i <= totalPages; i++) { %> <% if (i ===
      currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %> <% } %> <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>

  </section>


  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>



function handleFormSubmit(event) {
    event.preventDefault(); 

    // Validate form fields before submitting
    if (!validateForm()) {
        return;
    }

    // Get the values from the form
    const name = document.getElementsByName("name")[0].value;
    const description = document.getElementById("descriptionId").value;
    const type = document.getElementById("type").value;

    // Send a POST request using fetch
    fetch('/admin/addCategory', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, description, type })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    })
    .then(data => {
        // Show success message using Swal.fire
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Category added successfully!',
            timer: 2000,
            showConfirmButton: false
        }).then(() => {
            // Redirect to the category page after success
            window.location.href = '/admin/category';
        });
    })
    .catch(error => {
        // Handle errors and show appropriate messages
        if (error.message === "Category already exists") {
            Swal.fire({
                icon: 'error',
                title: 'Oops',
                text: "Category already exists"
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Oops",
                text: "An error occurred while adding the category"
            });
        }
    });

}

function validateForm(){
    clearErrorMessages();
    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();
    const type = document.getElementById("type"); 
    isValid = true;

    if(name===""){
        displayErrorMessage("name-error","Please enter a name");
        isValid = false
    }else if(!/^[a-zA-Z\s]+$/.test(name)){
  displayErrorMessage("name-error","Category name should contain only alphabetic characters");
  isValid = false

    }
    if(description===""){
        displayErrorMessage("description-error","Please enter a description")
        isValid = false
    }else if(description.length<10){
      displayErrorMessage("description-error", "Description must be at least 10 characters long");
      isValid =false
    }

    if (!type || type === "") {  // Corrected condition
        displayErrorMessage("type-error", "Please select a category type");
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId,message){
   var errorElement = document.getElementById(elementId);
   errorElement.innerText = message;
   errorElement.style.display = "block";

}

function clearErrorMessages(){
  const errorElements = document.getElementsByClassName("error-message");
  Array.from(errorElements).forEach((element)=>{
    element.innerText ="";
    element.style.display = "none";
  })
}


async function addOffer(categoryId) {
    const { value: amount } = await Swal.fire({
        title: "Offer in percentage",
        input: "number",
        inputLabel: "Percentage",
        inputPlaceholder: "%",
        inputAttributes: {
            min: 1,
            max: 100,
        },
        validationMessage: "Please enter a valid percentage between 1 and 100",
    });

    if (!amount || amount < 1 || amount > 100) {
        return Swal.fire("Invalid Input", "Please enter a valid percentage", "error");
    }

    try {
        const response = await fetch("/admin/addCategoryOffer", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                percentage: parseInt(amount, 10), // Ensure numeric value
                categoryId,
            }),
        });

        const data = await response.json();
        console.log("API Response:", data); // Debugging

        if (response.ok && data.status === true) {
            Swal.fire("Offer Added", "The offer has been added successfully", "success").then(() => {
                location.reload(); // Reload the page
            });
        } else {
            Swal.fire("Failed", data.message || "Adding offer failed", "error");
        }
    } catch (error) {
        console.error("Error adding offer:", error);
        Swal.fire("Error", "An error occurred while adding the offer", "error");
    }
}

async function removeOffer(categoryId) {
    try {
     const response = await fetch("/admin/removeCategoryOffer",{
      method:"POSt",
      headers:{
        "content-type": "application/json",
      },
      body:JSON.stringify({categoryId:categoryId,})
     }) 
  const data = await response.json();
  
  if(response.ok && data.status === true){
    Swal.fire(
      "Offer removed ",
      "The offer hase been removed",
      "success"
    ).then(()=>{
      location.reload();
    });
  }else{
    Swal.fire("Failed",data.message || "Removing offer failed","error");
  }
  
    } catch (error) {
      Swal.fire(
        "Error",
        "An error occured while removing the offer",
        "error"
      );
      console.error("Error removing offer",error);
    }
  }



</script>
<%- include("../../views/partials/admin/footer") %>




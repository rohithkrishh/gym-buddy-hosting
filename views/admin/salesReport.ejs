
<%- include("../../views/partials/admin/header") %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8">Sales Dashboard</h1>
        
        <div class="mb-4">
          <label for="dateRange" class="block text-sm font-medium text-gray-700">Select Date Range:</label>
          <select id="dateRange" class="mt-1 block w-48 pl-3 pr-10 py-2 text-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
              <option value="daily">Daily</option>
              <option value="weekly">Weekly</option>
              <option value="monthly">Monthly</option>
              <option value="yearly">Yearly</option>
              <option value="custom">Custom</option>
          </select>
      </div>
      
      <!-- Custom Date Range Selection -->
      <div id="customDateRange" class="hidden mb-4 space-y-2">
          <label for="startDate" class="block text-sm font-medium text-gray-700">Start Date:</label>
          <input type="date" id="startDate" class="mt-1 block w-48 px-3 py-2 text-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" onpaste="return false;">
      
          <label for="endDate" class="block text-sm font-medium text-gray-700 mt-2">End Date:</label>
          <input type="date" id="endDate" class="mt-1 block w-48 px-3 py-2 text-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" onpaste="return false;">
      
          <!-- Error message container -->
          <div id="date-error" class="text-red-500 text-sm mt-1 hidden"></div>
      </div>
      
      
        <!-- Sales Summary -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">

          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
              <dt class="text-sm font-medium text-gray-500 truncate">Total Sales</dt>
              <dd class="mt-1 text-3xl font-semibold flex items-center" id="totalSales">
               
                  <svg class="w-6 h-6 text-red-600 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
                  </svg>
              
                <span class="<%= 'text-green-600'  %>">
                  ₹<%= totalSales %>
                </span>
              </dd>
            </div>
          </div>
          
          
          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
              <dt class="text-sm font-medium text-gray-500 truncate">Total Orders</dt>
              <dd class="mt-1 text-3xl font-semibold flex items-center text-orange-500" id="totalOrders">
                <!-- Orders Icon -->
                <svg class="w-6 h-6 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M3 10h11M9 21v-6a2 2 0 00-2-2H4a2 2 0 00-2 2v6m10-6h5a2 2 0 012 2v4a2 2 0 01-2 2h-5m-2-8V5a2 2 0 012-2h6a2 2 0 012 2v4" />
                </svg>
                <%= orderCount %>
              </dd>
            </div>
          </div>
          

            <div class="bg-white overflow-hidden shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <dt class="text-sm font-medium text-gray-500 truncate">Total Discount</dt>
                <dd class="mt-1 text-3xl font-semibold flex items-center text-red-600" id="totalDiscount">
                  <!-- Discount Icon -->
                  <svg class="w-6 h-6 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7M7 7h4m-2-2v4" />
                  </svg>
                  ₹<%= discount %>
                </dd>
              </div>
            </div>
            
            <div class="bg-white overflow-hidden shadow rounded-lg">
                <div class="px-4 py-5 sm:p-6">
                    <dt class="text-sm font-medium text-gray-500 truncate">Average Order Value</dt>
                    <dd class="mt-1 text-3xl font-semibold text-gray-900" id="avgOrderValue">₹<%= avgOrderValue %></dd>
                </div>
            </div>
        </div>

        <!-- Sales Chart -->

        <div class="table-responsive">
            <table class="table table-bordered table-striped">
              <thead class="table-dark">
                <tr>
                  <th>No.</th>
                  <th>Date</th>
                  <th>User</th>
                  <th>Product</th>
                  <!-- <th>Variant</th> -->
                  <th>Quantity</th>
                  <th>Sale Price</th>
                  <th>Total Amount</th>
                  <th>Offer Amount</th>
                  <th>Payment</th>
                  <th>Status</th>
                </tr>
              </thead>
              <tbody id="order-list">
                <% orders.forEach((order, index) => { %>
                  <% order.cartItems.forEach((item, itemIndex) => { %>
                    <tr>
                      <% if (itemIndex === 0) { %>
                        <!-- Merging Order-wide fields for the first item -->
                        <td rowspan="<%= order.cartItems.length %>"><%= (index + 1) + ((currentPage - 1) * itemsPerPage) %></td>
                        <td rowspan="<%= order.cartItems.length %>"><%= new Date(order.createdAt).toLocaleDateString('en-US') %></td>
                        <td rowspan="<%= order.cartItems.length %>"><%= order.user?.name || "Unknown User" %></td>
                      <% } %>
                      <!-- Item-specific details -->
                      <td><%= item.product?.productName %></td>
                      <!-- <td><%= item.variant?.name || "N/A" %></td> -->
                      <td><%= item.quantity %></td>
                      <td>₹<%= item.salePrice.toFixed() %></td>
                      <% if (itemIndex === 0) { %>
                        <!-- Merging Order-wide fields for the first item -->
                        <td rowspan="<%= order.cartItems.length %>">₹<%= order.totalPrice.toFixed(2) %></td>
                        <td rowspan="<%= order.cartItems.length %>">₹<%= order.discount.toFixed(2) %></td>
                        <td rowspan="<%= order.cartItems.length %>"><%= order.paymentMethod %></td>
                        <td rowspan="<%= order.cartItems.length %>"><%= order.orderStatus %></td>
                      <% } %>
                    </tr>
                  <% }) %>
                <% }) %>
              </tbody>
            </table>
          </div>
          
          <div class="container mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <% for (let i=1; i <=totalPages; i++) { %>
                        <li class="page-item <%=(i === currentPage) ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>">
                                <%= i %>
                            </a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>

        <!-- Download Reports -->
        <div class="flex space-x-4">
            <button id="downloadPDF" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                Download PDF Report
            </button>
            <button id="downloadExcel" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                Download Excel Report
            </button>
        </div>
    </div>

  </body>

  <%- include("../../views/partials/admin/footer") %>

    <script>

    const dateRangeDropdown = document.getElementById("dateRange");
    const customDateRangeSection = document.getElementById("customDateRange");
    const startDateInput = document.getElementById("startDate");
    const endDateInput = document.getElementById("endDate");
    const orderList = document.getElementById("order-list");
document.addEventListener("DOMContentLoaded", function () {
   

    dateRangeDropdown.addEventListener("change", function () {
        if (dateRangeDropdown.value === "custom") {
            customDateRangeSection.classList.remove("hidden");
        } else {
            customDateRangeSection.classList.add("hidden");
            fetchFilteredData(dateRangeDropdown.value);
        }
    });

    startDateInput.addEventListener("change", validateAndFetchCustomData);
    endDateInput.addEventListener("change", validateAndFetchCustomData);

    function displayDateError(message) {
        console.log("Displaying error:", message); // Debugging

        let errorDiv = document.getElementById("date-error");

        if (!errorDiv) {
            errorDiv = document.createElement("div");
            errorDiv.id = "date-error";
            errorDiv.style.color = "red";
            errorDiv.style.marginTop = "5px";
            errorDiv.style.fontSize = "0.9em";
            customDateRangeSection.appendChild(errorDiv);
        }

        errorDiv.innerText = message;
        errorDiv.style.display = "block"; // Make sure it's visible
    }

    function clearDateError() {
        const errorDiv = document.getElementById("date-error");
        if (errorDiv) {
            errorDiv.style.display = "none"; // Hide instead of removing
        }
    }

    function validateAndFetchCustomData() {
        const startDate = startDateInput.value;
        const endDate = endDateInput.value;
        const today = new Date();

        console.log("Validating dates:", startDate, endDate, today);

        if (!startDate || !endDate) {
            displayDateError("Please select both start and end dates.");
            return;
        }

        if (new Date(startDate) > new Date(endDate)) {
            displayDateError("Start date cannot be later than end date.");
            return;
        }

        if (new Date(endDate) > today) {
            displayDateError("End date cannot be in the future.");
            return;
        }

        clearDateError();
        console.log("Valid date range selected:", startDate, endDate);
        fetchFilteredData("custom", startDate, endDate);
    }
});



function fetchFilteredData(range, startDate = null, endDate = null) {
    const params = {
        range,
        startDate,
        endDate,
    };

    console.log("22222222222", params);

    fetch("/admin/filtered-sales-data", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify(params),
    })
        .then((response) => response.json())
        .then((data) => {
            updateTable(data.orders);
            updateSummary(data.summary);
        })
        .catch((error) => {
            console.error("Error fetching data:", error);
        });
}


        // Update table with filtered data
        function updateTable(orders) {
          orderList.innerHTML = ""; // Clear existing rows
      
          orders.forEach((order, index) => {
            order.cartItems.forEach((item, itemIndex) => {
              const row = document.createElement("tr");
      
              if (itemIndex === 0) {
                row.innerHTML = `
                  <td rowspan="${order.cartItems.length}">${index + 1}</td>
                  <td rowspan="${order.cartItems.length}">${new Date(order.createdAt).toLocaleDateString("en-US")}</td>
                  <td rowspan="${order.cartItems.length}">${order.user?.name || "Unknown User"}</td>
                `;
              }
      
              row.innerHTML += `
                <td>${item.product?.productName }</td>
                <td>${item.quantity}</td>
                <td>₹${item.salePrice.toFixed()}</td>
                ${
                  itemIndex === 0
                    ? `
                  <td rowspan="${order.cartItems.length}">₹${order.totalPrice.toFixed(2)}</td>
                  <td rowspan="${order.cartItems.length}">₹${order.discount.toFixed(2)}</td>
                  <td rowspan="${order.cartItems.length}">${order.paymentMethod}</td>
                  <td rowspan="${order.cartItems.length}">${order.orderStatus}</td>
                `
                    : ""
                }
              `;
      
              orderList.appendChild(row);
            });
          });
        }
       
        // Update sales summary
        function updateSummary(summary) {
          document.getElementById("totalSales").textContent = summary.totalSales;  
          document.getElementById("totalOrders").textContent = summary.orderCount;
          document.getElementById("totalDiscount").textContent = `₹${summary.totalDiscount}`;
          document.getElementById("avgOrderValue").textContent = `₹${summary.avgOrderValue}`;
        }
      
      // PDF Download
document.getElementById("downloadPDF").addEventListener("click", function () {
    const range = dateRangeDropdown.value;
    const startDate = startDateInput.value || null;
    const endDate = endDateInput.value || null;

    // Construct the URL with query parameters
    const url = `/admin/orders/download/pdf?range=${range}&startDate=${startDate}&endDate=${endDate}`;

    window.location.href = url; // Trigger file download
});

// Excel Download
document.getElementById("downloadExcel").addEventListener("click", function () {
    const range = dateRangeDropdown.value;
    const startDate = startDateInput.value || null;
    const endDate = endDateInput.value || null;

    // Construct the URL with query parameters
    const url = `/admin/orders/download-excel?range=${range}&startDate=${startDate}&endDate=${endDate}`;

    window.location.href = url; // Trigger file download
});


      </script>

   







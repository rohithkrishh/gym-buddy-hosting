<%- include("../../views/partials/admin/header") %>
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 mt-60">
            <form method="post" action="/admin/editCategory/<%=category._id%>" onsubmit="return handleFormSubmit(event)">
                <div class="d-grid text-end mt-30 col-md-5">
                    <button class="btn btn-primary" type="submit">Update category</button>
                </div>
                <div class="mb-4 mt-30">
                    <label for="categoryName" class="form-label">Name</label>
                    <input type="text" name="categoryName" id="categoryName" value="<%=category.name%>" class="form-control border" />
                    <div id="name-error" class="error-message text-danger"></div>
                </div>
                
                <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea name="description" id="descriptionId" class="form-control border"><%=category.description%></textarea>
                    <div id="description-error" class="error-message text-danger"></div>
                </div>
                
                <div class="mb-4">
                    <label for="type" class="form-label">Type</label>
                    <select name="type" class="form-control" id="type" required>
                        <option value="" disabled selected>Select Category Type</option>
                        <option value="strength">Strength</option>
                        <option value="cardio">Cardio</option>
                        <!-- Add more types as needed -->
                    </select>
                </div>
            </form>
        </div>
    </div>
</div>

<%- include("../../views/partials/admin/footer") %>


<script>

function handleFormSubmit(event) {
    event.preventDefault(); 

    if (!validateForm()) {
        return;
    }

    // Get the values from the form
    const name = document.getElementsByName("categoryName")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();
    const categoryId = "<%=category._id%>";
    
    
    console.log("ddddd",categoryId);

    fetch(`/admin/editCategory/${categoryId}`, {  
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ categoryName, description, type }) 
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    })
    .then(data => {
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Category updated successfully!',
            timer: 2000,
            showConfirmButton: false
        }).then(() => {
            window.location.href = '/admin/category';
        });
    })
    .catch(error => {
        Swal.fire({
            icon: "error",
            title: "Oops",
            text: error.message || "An error occurred while updating the category"
        });
    });
}


function validateForm(){
    clearErrorMessages();
    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();
    isValid = true;

    if(name===""){
        displayErrorMessage("name-error","Please enter a name");
        isValid = false
    }else if(!/^[a-zA-Z\s]+$/.test(name)){
  displayErrorMessage("name-error","Category name should contain only alphabetic characters");
  isValid = false

    }
    if(description===""){
        displayErrorMessage("description-error","Please enter a description")
        isValid = false
    }
    return isValid;
}

function displayErrorMessage(elementId,message){
   var errorElement = document.getElementById(elementId);
   errorElement.innerText = message;
   errorElement.style.display = "block";

}

function clearErrorMessages(){
  const errorElements = document.getElementsByClassName("error-message");
  Array.from(errorElements).forEach((element)=>{
    element.innerText ="";
    element.style.display = "none";
  })
}

</script>

